<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd">
	<!-- 配置整合mybatis过程 -->
	<!-- 1.配置数据库相关参数properties的属性：${url} -->

	<context:property-placeholder
		location="classpath:jdbc.properties,classpath:redis.properties" />


	<!-- 2.数据库连接池 -->
	<bean id="dataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<!-- 配置连接池属性 -->
		<property name="driverClass" value="${jdbc.driver}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

		<!-- c3p0连接池的私有属性 -->
		<property name="maxPoolSize" value="30" />
		<property name="minPoolSize" value="10" />
		<!-- 关闭连接后不自动commit -->
		<property name="autoCommitOnClose" value="false" />
		<!-- 获取连接超时时间 -->
		<property name="checkoutTimeout" value="10000" />
		<!-- 当获取连接失败重试次数 -->
		<property name="acquireRetryAttempts" value="2" />
		<property name="testConnectionOnCheckout" value="false" />
		<property name="testConnectionOnCheckin" value="true" />
		<property name="idleConnectionTestPeriod" value="3600" />

	</bean>

	<!-- 3.配置SqlSessionFactory对象 -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 注入数据库连接池 -->
		<property name="dataSource" ref="dataSource" /> <!-- 配置MyBaties全局配置文件:mybatis-config.xml -->
		<property name="configLocation"
			value="classpath:mybatis-config.xml" /> <!-- 扫描entity包 使用别名 -->
		<property name="typeAliasesPackage" value="cn.xvkang.entity" /> <!-- 扫描sql配置文件:mapper需要的xml文件 -->
		<property name="mapperLocations"
			value="classpath:mapper/*.xml" />
	</bean>

	<!-- <bean id="sqlSessionFactory" class="com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean"> 
		注入数据库连接池 <property name="dataSource" ref="dataSource" /> 配置MyBaties全局配置文件:mybatis-config.xml 
		<property name="configLocation" value="classpath:mybatis-config.xml" /> 扫描entity包 
		使用别名 <property name="typeAliasesPackage" value="cn.xvkang.entity" /> 扫描sql配置文件:mapper需要的xml文件 
		<property name="mapperLocations" value="classpath:mapper/*.xml" /> </bean> -->


	<!-- 4.配置扫描Dao接口包，动态实现Dao接口，注入到spring容器中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 注入sqlSessionFactory -->
		<property name="sqlSessionFactoryBeanName"
			value="sqlSessionFactory" />
		<!-- 给出需要扫描Dao接口包 -->
		<property name="basePackage" value="cn.xvkang.dao" />
	</bean>






	<!-- <bean id="h2Server" class="org.h2.tools.Server"
		factory-method="createTcpServer" init-method="start"
		destroy-method="stop" depends-on="h2WebServer">
		<constructor-arg
			value="-tcp,-tcpAllowOthers,-tcpPort,9092" />
	</bean>
	<bean id="h2WebServer" class="org.h2.tools.Server"
		factory-method="createWebServer" init-method="start"
		destroy-method="stop">
		<constructor-arg
			value="-web,-webAllowOthers,-webPort,8082" />
	</bean> -->

	<bean id="h2DataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close"> <!-- depends-on="h2Server"> -->
		<property name="driverClass" value="org.h2.Driver" />
		<property name="jdbcUrl"
			value="jdbc:h2:mem:jiayuguan;MODE=MYSQL;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE" />
	</bean>
	<bean id="h2HibernateSessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="h2DataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.H2Dialect</prop> <!-- 指定自动生成数据表的策略 -->
				<prop key="hibernate.hbm2ddl.auto">update</prop> <!-- 执行操作时是否在控制台打印SQL -->
				<prop key="hibernate.show_sql">true</prop> <!-- 是否对SQL进行格式化 -->
				<prop key="hibernate.format_sql">true</prop>
			</props>
		</property> <!-- 扫描此包下的所有Entity,进行ORM映射 -->
		<property name="packagesToScan">
			<list>
				<value>cn.xvkang.h2.entity</value>
			</list>
		</property>
	</bean>

	<context:component-scan
		base-package="cn.xvkang.h2.dao" />



</beans>