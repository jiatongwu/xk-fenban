<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx.xsd
	http://www.springframework.org/schema/task
	http://www.springframework.org/schema/task/spring-task.xsd">
	<!-- 扫描service包下所有使用注解的类型 -->
	<context:component-scan
		base-package="cn.xvkang.service" />
<context:annotation-config />


	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 注入数据库连接池 -->
		<property name="dataSource" ref="dataSource" />
	</bean>
	<bean class="org.springframework.transaction.support.TransactionTemplate">
		<property name="transactionManager" ref="transactionManager"></property>
	</bean>

	<!-- 配置基于注解的声明式事务 -->
	<tx:annotation-driven
		transaction-manager="transactionManager" />
	<task:scheduler id="scheduler" pool-size="10" />
	<task:executor id="executor" pool-size="7" />
	<bean class="cn.xvkang.utils.SpringUtils"></bean>
	
	<!-- Redis -->
	<bean id="jedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${redis.host}" />
		<property name="port" value="${redis.port}" />
	</bean>
	<bean class="cn.xvkang.config.RedisTemplateConfig"></bean>
	<bean id="stringRedisTemplate"
		class="org.springframework.data.redis.core.StringRedisTemplate">
		<property name="connectionFactory"
			ref="jedisConnectionFactory" />
	</bean> 
	
	<bean id="sessionListener" class="cn.xvkang.web.session.SessionListener"></bean>
	<!-- Session -->
	<bean id="redisHttpSessionConfiguration"
		class="org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration">
		<property name="maxInactiveIntervalInSeconds" value="1800" />
		<property name="httpSessionListeners">
            <list>
                <ref bean="sessionListener" />
            </list>
        </property>
	</bean>
	 

	<bean class="cn.xvkang.config.SpringSessionConfig"/>
	<!-- <bean		class="org.springframework.security.web.session.HttpSessionEventPublisher" />
 -->

</beans>